data.frame(cbind(seq(teams[i,1], teams[i,2])))
teams = c("Arsenal","Bournemouth","Burnley","Chelsea","Crystal Palace","Everton",
"Hull City","Leicester","Liverpool","Manchester City","Manchester United",
"Middlesbrough","Southampton","Stoke City","Sunderland","Swansea","Tottenham",
"Watford","West Bromwich Albion","West Ham")
players_in = c(10,16,9,18,7,8,9,10,14,15,8,15,10,6,18,12,11,22,7,13)
players_out = c(9,16,12,18,11,8,8,7,20,15,9,13,10,5,15,12,9,21,9,10)
teams <- data.frame(teams, players_in, players_out)
teams[i,1]
data.frame(cbind(seq(teams[i,1], teams[i,2])))
teams <- data.frame(as.character(teams), players_in, players_out)
teams <- data.frame(teams, players_in, players_out)
teams
teams = c("Arsenal","Bournemouth","Burnley","Chelsea","Crystal Palace","Everton",
"Hull City","Leicester","Liverpool","Manchester City","Manchester United",
"Middlesbrough","Southampton","Stoke City","Sunderland","Swansea","Tottenham",
"Watford","West Bromwich Albion","West Ham")
players_in = c(10,16,9,18,7,8,9,10,14,15,8,15,10,6,18,12,11,22,7,13)
players_out = c(9,16,12,18,11,8,8,7,20,15,9,13,10,5,15,12,9,21,9,10)
teams <- data.frame(teams, players_in, players_out)
teams
teams[i,1]
teams[i,2]
as.character(teams[i,1])
data.frame(cbind(seq(as.character(teams[i,1]), teams[i,2])))
seq(teams[i,1],teams[i,2])
rep(teams[i,1],teams[i,2])
cbind(rep(teams[i,1],teams[i,2], rep("in", teams[i,2]))
)
rep("in", teams[i,2])
cbind(rep(teams[i,1],teams[i,2], rep("in", teams[i,2])))
rep(teams[i,1],teams[i,2])
team_in <- rep(teams[i,1],teams[i,2])
rep("in", teams[i,2])
data.frame(team_in, team_in_in)
team_in <- rep(teams[i,1],teams[i,2])
team_in_in <- rep("in", teams[i,2])
temp_team_in <- data.frame(team_in, team_in_in)
temp_team_in
team_out <- rep(teams[i,1], teams[i,3])
team_out_out <- rep("out", teams[i,3])
temp_team_out <- data.frame(team_out, team_out_out)
colnames(temp_team_in) <- c("team", "transfer_status")
colnames(temp_team_out) <- c("team", "transfer_status")
temp_df <- rbind(temp_team_in, temp_team_out)
temp_df
df <- rbind(df, temp_df)
df <- rbind(df, temp_df)
rm(team_in, team_in_in, temp_team_in, team_out, team_out_out, temp_team_out, temp_df)
df <- data.frame()
for (i in 1:dim(teams)[1]){
team_in <- rep(teams[i,1],teams[i,2])
team_in_in <- rep("in", teams[i,2])
temp_team_in <- data.frame(team_in, team_in_in)
team_out <- rep(teams[i,1], teams[i,3])
team_out_out <- rep("out", teams[i,3])
temp_team_out <- data.frame(team_out, team_out_out)
colnames(temp_team_in) <- c("team", "transfer_status")
colnames(temp_team_out) <- c("team", "transfer_status")
temp_df <- rbind(temp_team_in, temp_team_out)
df <- rbind(df, temp_df)
rm(team_in, team_in_in, temp_team_in, team_out, team_out_out, temp_team_out, temp_df)
}
View(df)
all <- cbind(all, df)
View(all)
View(all)
football_eng <- read_html("http://www.footballdatabase.eu/transfertstab.php?competition=1&lieu=Angleterre&saison=2016/2017")
players <- football_eng %>%
html_nodes(".drapeau+ .link_1") %>%
html_text()
players
players <- gsub("\\(man.,", "(Manager)",players)
players <- gsub("\\(", "", players)
players <- gsub("\\)", "", players)
players <- trimws(players)
players <- gsub("Manager", "(Manager)", players)
players
players <- football_eng %>%
html_nodes(".drapeau+ .link_1") %>%
html_text()
players
football_eng <- read_html("http://www.footballdatabase.eu/transfertstab.php?competition=1&lieu=Angleterre&saison=2016/2017")
players <- football_eng %>%
html_nodes(".drapeau+ .link_1") %>%
html_text()
players
football_eng
library(rvest)
library(stringi)
library(dplyr)
library(XML)
library(stringr)
football_eng <- read_html("http://www.footballdatabase.eu/transfertstab.php?competition=1&lieu=Angleterre&saison=2016/2017")
players <- football_eng %>%
html_nodes(".drapeau+ .link_1") %>%
html_text()
players
players <- gsub("\\(man.,", "(Manager)",players)
players <- gsub("\\(", "", players)
players <- gsub("\\)", "", players)
players <- gsub("Manager", "", players)
players <- trimws(players)
players
players <- data.frame(players)
club <- football_eng %>%
html_nodes("b .link_1 , .link_1+ .link_1") %>%
html_text()
club
club <- data.frame(club)
club_abbr <- html_nodes(football_eng,"b .link_1 , .link_1+ .link_1 , abbr")
club_abbr <- htmlParse(club_abbr)
club_abbr
club_abbr <- unlist(xpathApply(club_abbr, '//a'))
df_club_abbr <- data.frame(link = matrix(ncol=1), stringsAsFactors = FALSE)
for (i in seq(1:475)) {
df_club_abbr <- rbind(df_club_abbr, as(club_abbr[[i]], "character"))
}
df_club_abbr <- df_club_abbr[2:476,1]
df_club_abbr <- str_extract(df_club_abbr, "(abbr).+(\\\")")
df_club_abbr
df_club_abbr <- str_extract(df_club_abbr, "\"[A-Z][a-z](.*?)\\\"")
df_club_abbr <- gsub('\"', "", df_club_abbr)
df_club_abbr <- data.frame(df_club_abbr)
df_club_abbr
df_club_abbr$df_club_abbr <- gsub("&#xC3;&#xB1;", "ñ", df_club_abbr$df_club_abbr)
df_club_abbr$df_club_abbr <- gsub("&amp;", "&", df_club_abbr$df_club_abbr)
df_club_abbr$df_club_abbr <- gsub("&#xC3;&#xBC;", "ü", df_club_abbr$df_club_abbr)
df_club_abbr$df_club_abbr <- gsub("&#xC3;&#xA9;", "é", df_club_abbr$df_club_abbr)
df_club_abbr
club <- data.frame(lapply(club, as.character), stringsAsFactors = FALSE)
team_name <- data.frame(club, df_club_abbr)
team_name$name <- ifelse(is.na(team_name$df_club_abbr), team_name$club, team_name$df_club_abbr)
team_name$name <- gsub("\\s*(?<!\\S)[a-zA-Z]{1}(?!\\S)", "", team_name$name, perl = T)
team_name$name <- gsub(" U-19", "", team_name$name)
rm(club_abbr, i)
View(team_name)
nationality <- football_eng %>%
html_nodes("tr+ tr .drapeau") %>%
htmlParse()
nationality <- unlist(xpathApply(nationality,'//img', xmlGetAttr, "title"))
nationality <- data.frame(nationality)
full_info <- football_eng %>%
html_nodes(".tabmodulebleu488 table table td") %>%
html_text()
full_info
full_info <- gsub("man.,\\s","",full_info)
full_info <- gsub(".*\\((.*)\\).*", "\\1", full_info)
full_info <- sapply(strsplit(full_info, ","),"[",2)
full_info <- trimws(full_info)
full_info <- gsub("\u0080", "EUR", full_info)
full_info <- gsub("B.L.", "Return Loan", full_info)
full_info <- gsub("L\\.", "Loan", full_info)
full_info <- data.frame(full_info)
View(full_info)
teams = c("Arsenal","Bournemouth","Burnley","Chelsea","Crystal Palace","Everton",
"Hull City","Leicester","Liverpool","Manchester City","Manchester United",
"Middlesbrough","Southampton","Stoke City","Sunderland","Swansea","Tottenham",
"Watford","West Bromwich Albion","West Ham")
players_in = c(10,16,9,18,7,8,9,10,14,15,8,15,10,6,18,12,11,22,7,13)
players_out = c(9,16,12,18,11,8,8,7,20,15,9,13,10,5,15,12,9,21,9,10)
teams <- data.frame(teams, players_in, players_out)
df <- data.frame()
for (i in 1:dim(teams)[1]){
team_in <- rep(teams[i,1],teams[i,2])
team_in_in <- rep("in", teams[i,2])
temp_team_in <- data.frame(team_in, team_in_in)
team_out <- rep(teams[i,1], teams[i,3])
team_out_out <- rep("out", teams[i,3])
temp_team_out <- data.frame(team_out, team_out_out)
colnames(temp_team_in) <- c("prem_league_team", "transfer_status")
colnames(temp_team_out) <- c("prem_league_team", "transfer_status")
temp_df <- rbind(temp_team_in, temp_team_out)
df <- rbind(df, temp_df)
rm(team_in, team_in_in, temp_team_in, team_out, team_out_out, temp_team_out, temp_df)
}
df <- data.frame(lapply(df, as.character), stringsAsFactors=FALSE)
all <- cbind(df, players, nationality, full_info, team_name[3])
View(all)
prem_league <- c("Arsenal","Bournemouth","Burnley","Chelsea","Crystal Palace",
"Everton","Hull City","Leicester","Liverpool","Manchester City",
"Manchester United","Middlesbrough","Southampton","Stoke City",
"Sunderland","Swansea","Tottenham","Watford",
"West Bromwich Albion","West Ham")
test <- cbind(league = rep("Premier League", length(prem_league)), prem_league)
prem_league <- data.frame(test[,1], test[,2])
colnames(prem_league) <- c("league", "team_name")
prem_league <- data.frame(lapply(prem_league, as.character), stringsAsFactors=FALSE)
all <- data.frame(all, league=prem_league[match(all$name, prem_league$team_name), 1])
all$from <- ifelse(all$transfer_status == "in", all$name, all$prem_league_team)
all$to <- ifelse(all$transfer_status == "in", all$prem_league_team, all$name)
all$from[461] <- "West Ham"
all$from[291] <- "Southampton"
all$transfer_sum <- NA
all$transfer_sum <- as.numeric(str_extract(all$full_info, "\\d+\\.*\\d*"))
all$transfer_sum[is.na(all$transfer_sum)] <- 0
View(all)
all$type <- NA
rm(list=setdiff(ls(), "football_eng"))
library(rvest)
library(stringi)
library(dplyr)
library(XML)
library(stringr)
players <- football_eng %>%
html_nodes(".drapeau+ .link_1") %>%
html_text()
players
players <- gsub("\\(man.,", "(Manager)",players)
players <- gsub("\\(", "", players)
players <- gsub("\\)", "", players)
players <- gsub("Manager", "", players)
players <- trimws(players)
players
players <- data.frame(players)
club <- football_eng %>%
html_nodes("b .link_1 , .link_1+ .link_1") %>%
html_text()
club
#Encoding(club) <- "UTF-8"
club <- data.frame(club)
#Club done! Combine with abbreviated clubs:
#Teams are abbreviated:
club_abbr <- html_nodes(football_eng,"b .link_1 , .link_1+ .link_1 , abbr")
club_abbr <- htmlParse(club_abbr)
club_abbr
club_abbr <- unlist(xpathApply(club_abbr, '//a'))
df_club_abbr <- data.frame(link = matrix(ncol=1), stringsAsFactors = FALSE)
for (i in seq(1:475)) {
df_club_abbr <- rbind(df_club_abbr, as(club_abbr[[i]], "character"))
}
df_club_abbr <- df_club_abbr[2:476,1]
df_club_abbr <- str_extract(df_club_abbr, "(abbr).+(\\\")")
#Encoding(df_club_abbr) <- "UTF-8"
df_club_abbr <- str_extract(df_club_abbr, "\"[A-Z][a-z](.*?)\\\"")
df_club_abbr <- gsub('\"', "", df_club_abbr)
df_club_abbr <- data.frame(df_club_abbr)
df_club_abbr$df_club_abbr <- gsub("&#xC3;&#xB1;", "ñ", df_club_abbr$df_club_abbr)
df_club_abbr$df_club_abbr <- gsub("&amp;", "&", df_club_abbr$df_club_abbr)
df_club_abbr$df_club_abbr <- gsub("&#xC3;&#xBC;", "ü", df_club_abbr$df_club_abbr)
df_club_abbr$df_club_abbr <- gsub("&#xC3;&#xA9;", "é", df_club_abbr$df_club_abbr)
df_club_abbr
club <- data.frame(lapply(club, as.character), stringsAsFactors = FALSE)
team_name <- data.frame(club, df_club_abbr)
team_name$name <- ifelse(is.na(team_name$df_club_abbr), team_name$club, team_name$df_club_abbr)
team_name$name <- gsub("\\s*(?<!\\S)[a-zA-Z]{1}(?!\\S)", "", team_name$name, perl = T)
team_name$name <- gsub(" U-19", "", team_name$name)
rm(club_abbr, i)
nationality <- football_eng %>%
html_nodes("tr+ tr .drapeau") %>%
htmlParse()
nationality <- unlist(xpathApply(nationality,'//img', xmlGetAttr, "title"))
nationality <- data.frame(nationality)
full_info <- football_eng %>%
html_nodes(".tabmodulebleu488 table table td") %>%
html_text()
full_info
#Encoding(full_info) <- "UTF-8"
full_info <- gsub("man.,\\s","",full_info)
full_info <- gsub(".*\\((.*)\\).*", "\\1", full_info)
full_info <- sapply(strsplit(full_info, ","),"[",2)
#full_info <- sapply(strsplit(full_info, ","),"[",1)
full_info <- trimws(full_info)
full_info <- gsub("\u0080", "EUR", full_info)
full_info <- gsub("B.L.", "Return Loan", full_info)
full_info <- gsub("L\\.", "Loan", full_info)
full_info <- data.frame(full_info)
teams = c("Arsenal","Bournemouth","Burnley","Chelsea","Crystal Palace","Everton",
"Hull City","Leicester","Liverpool","Manchester City","Manchester United",
"Middlesbrough","Southampton","Stoke City","Sunderland","Swansea","Tottenham",
"Watford","West Bromwich Albion","West Ham")
players_in = c(10,16,9,18,7,8,9,10,14,15,8,15,10,6,18,12,11,22,7,13)
players_out = c(9,16,12,18,11,8,8,7,20,15,9,13,10,5,15,12,9,21,9,10)
teams <- data.frame(teams, players_in, players_out)
df <- data.frame()
for (i in 1:dim(teams)[1]){
team_in <- rep(teams[i,1],teams[i,2])
team_in_in <- rep("in", teams[i,2])
temp_team_in <- data.frame(team_in, team_in_in)
team_out <- rep(teams[i,1], teams[i,3])
team_out_out <- rep("out", teams[i,3])
temp_team_out <- data.frame(team_out, team_out_out)
colnames(temp_team_in) <- c("prem_league_team", "transfer_status")
colnames(temp_team_out) <- c("prem_league_team", "transfer_status")
temp_df <- rbind(temp_team_in, temp_team_out)
df <- rbind(df, temp_df)
rm(team_in, team_in_in, temp_team_in, team_out, team_out_out, temp_team_out, temp_df)
}
df <- data.frame(lapply(df, as.character), stringsAsFactors=FALSE)
#all <- data.frame(players, nationality, team_name[,3], full_info)
all <- cbind(df, players, nationality, full_info, team_name[3])
#Before starting the network build-up we need to think about what to do
#with transfers within Premier League. For instance a player like John Stones,
#he is in both in/out for Man City and Arsenal, and we need to take him out
#from one of them. Strategy should be to eliminate one of the classes
#if a transfer has taken place within Premier League.
#Maybe we can do a dictionary for teams in Premier League:
#1. Match teams in Premier League.
#2. If Previous team and new team are both i Premier League, eliminate "in".
prem_league <- c("Arsenal","Bournemouth","Burnley","Chelsea","Crystal Palace",
"Everton","Hull City","Leicester","Liverpool","Manchester City",
"Manchester United","Middlesbrough","Southampton","Stoke City",
"Sunderland","Swansea","Tottenham","Watford",
"West Bromwich Albion","West Ham")
test <- cbind(league = rep("Premier League", length(prem_league)), prem_league)
prem_league <- data.frame(test[,1], test[,2])
colnames(prem_league) <- c("league", "team_name")
prem_league <- data.frame(lapply(prem_league, as.character), stringsAsFactors=FALSE)
all <- data.frame(all, league=prem_league[match(all$name, prem_league$team_name), 1])
all$from <- ifelse(all$transfer_status == "in", all$name, all$prem_league_team)
all$to <- ifelse(all$transfer_status == "in", all$prem_league_team, all$name)
#Two players were not coming from any team. B Johnson and O Cook. They are
#internal players coming from the youth academy:
#B. Johnson - West Ham
all$from[461] <- "West Ham"
#O. Cook - Southampton
all$from[291] <- "Southampton"
#So, now we have the to and from set up. Let's also sort out the "full_info":
#Basically if it says EUR, extract it into a separate file
#Include transfer sum:
all$transfer_sum <- NA
all$transfer_sum <- as.numeric(str_extract(all$full_info, "\\d+\\.*\\d*"))
all$transfer_sum[is.na(all$transfer_sum)] <- 0
all$type <- "Transfer"
#See if we can do some grouping of transfer type:
indx <- grepl("EUR", all$full_info)
all$type[indx] <- "Transfer"
indx <- grepl("Loan", all$full_info)
all$type[indx] <- "Loan"
indx <- grepl("Return Loan", all$full_info)
all$type[indx] <- "Return Loan"
indx <- grepl("Free", all$name)
all$type[indx] <- "Free"
indx <- grepl("Retired", all$name)
all$type[indx] <- "Retired"
transfer_data <- all[,c(3,4,8,9:11)]
transfer_data <- unique(transfer_data)
View(transfer_data)
test_team <- transfer_data %>%
group_by(to) %>%
summarize(players_bought = sum(transfer_sum))
colnames(test_team) <- c("Team", "Players_bought")
test_team1 <- transfer_data %>%
group_by(from) %>%
summarize(players_sold = sum(transfer_sum))
colnames(test_team1) <- c("Team", "Players_sold")
team_bought_sold <- merge(test_team, test_team1, by = "Team", all = T)
team_bought_sold[is.na(team_bought_sold)] <- 0
team_bought_sold <- merge(team_bought_sold, prem_league, by.x = "Team", by.y = "team_name", all = TRUE)
team_bought_sold$league[is.na(team_bought_sold$league)] <- "Other League"
colnames(team_bought_sold)[4] <- "League"
team_bought_sold$Value <- ifelse(team_bought_sold$Players_bought>team_bought_sold$Players_sold,
team_bought_sold$Players_bought, team_bought_sold$Players_sold)
node <- team_bought_sold
node$color <- ifelse(node$League == "Premier League", "Red", "Blue")
node$id <- node$Team
node$title <- node$Team
node$shape <- "dot"
head(node)
colnames(node)[c(1,4,5)] <- c("id", "group", "value")
edges <- transfer_data
head(edges)
colnames(edges)[c(1,6)] <- c("title", "label")
edges$arrows <- "to"
visNetwork(node, edges, width = "100%")
library(visNetwork)
visNetwork(node, edges, width = "100%")
setwd("~/Google Drive/R/Football transfer data")
head(node)
paste0("test", 1:4, ".png")
paste0("test", ".png")
path_to_images <- "https://raw.githubusercontent.com/datastorm-open/datastorm-open.github.io/master/visNetwork/data/img/indonesia/"
paste0(path_to_images, 1:4, ".png")
setwd("~/Google Drive/R/Football transfer data/icons")
node$image <- "Arsenal_FC.svg"
visNetwork(node, edges, width = "100%")
node$shape <- "image"
visNetwork(node, edges, width = "100%") %>%
visNodes(shapeProperties = list(useBorderWithImage = TRUE)) %>%
visLayout(randomSeed = 2)
View(node)
node$color <- NULL
visNetwork(node, edges, width = "100%") %>%
visNodes(shapeProperties = list(useBorderWithImage = TRUE)) %>%
visLayout(randomSeed = 2)
node$shape <- "circularImage"
visNetwork(node, edges, width = "100%") %>%
visNodes(shapeProperties = list(useBorderWithImage = TRUE)) %>%
visLayout(randomSeed = 2)
node$image <- "Arsenal_FC.svg.png"
visNetwork(node, edges, width = "100%") %>%
visNodes(shapeProperties = list(useBorderWithImage = TRUE)) %>%
visLayout(randomSeed = 2)
node$shape <- "image"
visNetwork(node, edges, width = "100%") %>%
visNodes(shapeProperties = list(useBorderWithImage = TRUE)) %>%
visLayout(randomSeed = 2)
node$image <- "Arsenal_FC.png"
node$shape <- "image"
visNetwork(node, edges, width = "100%") %>%
visNodes(shapeProperties = list(useBorderWithImage = TRUE)) %>%
visLayout(randomSeed = 2)
node$image <- "~/Google Drive/R/Football transfer data/Arsenal_FC.png"
node$shape <- "image"
visNetwork(node, edges, width = "100%") %>%
visNodes(shapeProperties = list(useBorderWithImage = TRUE)) %>%
visLayout(randomSeed = 2)
path_to_images <- "https://raw.githubusercontent.com/datastorm-open/datastorm-open.github.io/master/visNetwork/data/img/indonesia/"
node$image <- paste(path_to_images, 1, ".png")
visNetwork(node, edges, width = "100%") %>%
visNodes(shapeProperties = list(useBorderWithImage = TRUE)) %>%
visLayout(randomSeed = 2)
path_to_images <- "https://raw.githubusercontent.com/datastorm-open/datastorm-open.github.io/master/visNetwork/data/img/indonesia/"
nodes <- data.frame(id = 1:4,
shape = c("image", "circularImage"),
image = paste0(path_to_images, 1:4, ".png"),
label = "I'm an image")
edges <- data.frame(from = c(2,4,3,3), to = c(1,2,4,2))
visNetwork(nodes, edges, width = "100%") %>%
visNodes(shapeProperties = list(useBorderWithImage = TRUE)) %>%
visLayout(randomSeed = 2)
View(node)
node <- team_bought_sold
node$color <- ifelse(node$League == "Premier League", "Red", "Blue")
node$id <- node$Team
node$title <- node$Team
node$shape <- "dot"
head(node)
colnames(node)[c(1,4,5)] <- c("id", "group", "value")
head(node)
node$image <- paste(path_to_images, 1, ".png")
node$shape <- "image"
path_to_images <- "https://raw.githubusercontent.com/datastorm-open/datastorm-open.github.io/master/visNetwork/data/img/indonesia/"
head(transfer_data)
edges <- transfer_data
head(edges)
colnames(edges)[c(1,6)] <- c("title", "label")
edges$arrows <- "to"
visNetwork(node, edges, width = "100%")
path_to_images <- "https://raw.githubusercontent.com/datastorm-open/datastorm-open.github.io/master/visNetwork/data/img/indonesia/"
node$image <- paste(path_to_images, 1, ".png")
node$shape <- "image"
visNetwork(node, edges, width = "100%")
node$id <- node$Team
node <- team_bought_sold
node$title <- node$Team
node$shape <- "image"
head(node)
colnames(node)[c(1,4,5)] <- c("id", "group", "value")
head(node)
path_to_images <- "https://raw.githubusercontent.com/datastorm-open/datastorm-open.github.io/master/visNetwork/data/img/indonesia/"
node$image <- paste(path_to_images, 1, ".png")
node$shape <- "image"
head(node)
node$image <- "https://en.wikipedia.org/wiki/File:Arsenal_FC.svg"
node$shape <- "image"
head(node)
visNetwork(node, edges, width = "100%") %>%
visNodes(shapeProperties = list(useBorderWithImage = TRUE)) %>%
visLayout(randomSeed = 2)
node$image <- "https://upload.wikimedia.org/wikipedia/en/5/53/Arsenal_FC.svg"
node$shape <- "image"
visNetwork(node, edges, width = "100%") %>%
visNodes(shapeProperties = list(useBorderWithImage = TRUE)) %>%
visLayout(randomSeed = 2)
node$shape <- "circularImage"
visNetwork(node, edges, width = "100%") %>%
visNodes(shapeProperties = list(useBorderWithImage = TRUE)) %>%
visLayout(randomSeed = 2)
View(node)
node$color <- "white"
visNetwork(node, edges, width = "100%") %>%
visNodes(shapeProperties = list(useBorderWithImage = TRUE)) %>%
visLayout(randomSeed = 2)
node$shape <- "image"
visNetwork(node, edges, width = "100%") %>%
visNodes(shapeProperties = list(useBorderWithImage = TRUE)) %>%
visLayout(randomSeed = 2)
node$color <- "none"
visNetwork(node, edges, width = "100%") %>%
visNodes(shapeProperties = list(useBorderWithImage = TRUE)) %>%
visLayout(randomSeed = 2)
node$color <- "white"
visNetwork(node, edges, width = "100%") %>%
visNodes(shapeProperties = list(useBorderWithImage = TRUE)) %>%
visLayout(randomSeed = 2)
node <- team_bought_sold
node$color <- ifelse(node$League == "Premier League", "Red", "Blue")
node$id <- node$Team
node$title <- node$Team
node$shape <- "image"
head(node)
colnames(node)[c(1,4,5)] <- c("id", "group", "value")
head(node)
node$image <- "https://upload.wikimedia.org/wikipedia/en/5/53/Arsenal_FC.svg"
node$shape <- "image"
edges <- transfer_data
head(edges)
colnames(edges)[c(1,6)] <- c("title", "label")
edges$arrows <- "to"
node$color.background <- "white"
visNetwork(node, edges, width = "100%") %>%
visNodes(shapeProperties = list(useBorderWithImage = TRUE)) %>%
visLayout(randomSeed = 2)
node$color.background <- NA
visNetwork(node, edges, width = "100%") %>%
visNodes(shapeProperties = list(useBorderWithImage = TRUE)) %>%
visLayout(randomSeed = 2)
node$color <- NA
visNetwork(node, edges, width = "100%") %>%
visNodes(shapeProperties = list(useBorderWithImage = TRUE)) %>%
visLayout(randomSeed = 2)
